Name: Matt Biggers 
SEA-C42
Homework 7 - DNA Counting


Problem 1:

Downloaded and extracted the zip file.


Problem 2:

~/D/F/homework7 $ python3 dna_analysis.py data/sample_1.fastq
GC-content: 0.4302926296296296


Problem 3:

I received the following error:

File "dna_analysis.py", line 38, in <module>
    linenum = linenum + 1
NameError: name 'linenum' is not defined

I received this error because functions in the .py file require a defined variable.  I took that definition away when I commented out those two lines.  If I comment out the gc_count variable, I’m positive I will receive a similar error message.  I tested it and I was correct; I received the following error message:

  File "dna_analysis.py", line 64, in <module>
    gc_count = gc_count + 1
NameError: name 'gc_count' is not defined 


Problem 4:

~/D/F/homework7 $ python3 dna_analysis.py data/sample_1.fastq
GC-content: 0.4302926296296296 and the AT-content: 0.5689938518518518


Problem 5:

~/D/F/homework7 $ python3 dna_analysis.py data/sample_1.fastq
GC-content: 0.4302926296296296 and the AT-content: 0.5689938518518518
A-count: 7701287 T-count: 7661547
G-count: 5738773 C-count: 5879128


Problem 6:

For all six samples, the total_count and len(seq) are the same while the sum_count is different.  Here are the numbers in the following format (sum, total, len(seq)):

sample_1:  26980735, 27000000, 27000000,
sample_2:  26977435, 27000000, 27000000,
sample_3:  9510883, 9510928, 9510928,
sample_4:  9980961, 9981008, 9981008,
sample_5:  75, 76, 76,
sample_6:  26990, 27000, 27000.

I believe the total_count is the correct number.  I believe the difference is due to the use of the float function when calculating the gc_content and at_content variables.  Float was not used to calculate the other number.  For this reason, total_count should be used as the denominator as it is the most accurate number.  Using the others as the denominator will create false percentages.  

The following is an example for calculating (G+C)/(A+C+G+T) (variable name ‘GC-Final’) and comparing it to the GC-content I listed earlier.  Here are the numbers I got when I ran the program on the sixth sample:

~/D/F/homework7 $ python3 dna_analysis.py data/sample_6.fastq
GC-content: 0.4915185185185185
GC-Final: 0.4917006298629122
GC Difference: 0.00018211134439366505

You can see there is only a 0.00018211 difference with GC-Final being only that much larger.  Due to such an incredibly small difference, I would label these numbers as the same.  I ran this on the other samples and the difference in size was similar.


Problem 7:

~/D/F/homework7 $ python3 dna_analysis.py data/sample_1.fastq
AT/GC Ratio: 1.3223416174746196


Problem 8:

~/D/F/homework7 $ python3 dna_analysis.py data/sample_1.fastq
This organism has a MODERATE GC-Content of 0.43059987061138255 .


Collaboration:

I created a Slack group for the two other students I met at Roy Street Cafe (Spencer and Daniel).  We used it to communicate various problems and overcome early obstacles on HW6 and a little on HW7.  I have since finished HW7 on my own accord, but I’m sure the three of us will be discussing HW6 more as it’s still a work in progress.


Reflection:

This assignment was my favorite CodeFellows assignment so far and that includes Foundation I.  The problems started out simple and grew in complexity.  Yet the solutions were never completely out of reach as each completed problem gave you the knowledge and skills to complete the next.  I really enjoyed the real-world application of this project and it got me thinking of various career opportunities that I had not considered before.  

I felt adequately prepared for this assignment and the nature of the problems themselves allowed me to learn new things without being overwhelming.